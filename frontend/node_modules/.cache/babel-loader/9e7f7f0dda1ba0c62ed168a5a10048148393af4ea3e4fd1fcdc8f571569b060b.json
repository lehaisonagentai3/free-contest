{"ast":null,"code":"import axios from'axios';const API_BASE_URL='/api/v1';const api=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json'}});// Officers API\nexport const getOfficers=async()=>{const response=await api.get('/officers');return response.data.data;};export const getOfficerById=async id=>{const response=await api.get(\"/officers/\".concat(id));return response.data.data;};// Subjects API\nexport const getSubjects=async()=>{const response=await api.get('/subjects');return response.data.data;};// Units API\nexport const getUnits=async()=>{const response=await api.get('/units');return response.data.data;};// Tests API\nexport const getOfficerSubjectTest=async(officerId,subjectId)=>{const response=await api.get('/tests/officer-subject',{params:{officerID:officerId,subjectID:subjectId}});return response.data.data;};export const startTest=async(officerId,testId)=>{const response=await api.post('/tests/start',null,{params:{officerID:officerId,testID:testId}});return response.data.data;};export const submitTest=async(officerId,testId,answers)=>{const response=await api.post('/tests/submit',answers,{params:{officerID:officerId,testID:testId}});return response.data.data;};export default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","getOfficers","response","get","data","getOfficerById","id","concat","getSubjects","getUnits","getOfficerSubjectTest","officerId","subjectId","params","officerID","subjectID","startTest","testId","post","testID","submitTest","answers"],"sources":["/Users/maianhnguyen/go/src/github.com/lehaisonagentai3/free-contest/frontend/src/api/api.ts"],"sourcesContent":["import axios, { AxiosResponse } from 'axios';\nimport { \n  Officer, \n  Subject, \n  Unit, \n  Test, \n  Submission, \n  TestAnswers,\n  ListOfficerResponse,\n  OfficerResponse,\n  ListSubjectResponse,\n  ListUnitResponse,\n  TestResponse,\n  SubmissionResponse\n} from '../types/api';\n\nconst API_BASE_URL = '/api/v1';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Officers API\nexport const getOfficers = async (): Promise<Officer[]> => {\n  const response: AxiosResponse<ListOfficerResponse> = await api.get('/officers');\n  return response.data.data;\n};\n\nexport const getOfficerById = async (id: string | number): Promise<Officer> => {\n  const response: AxiosResponse<OfficerResponse> = await api.get(`/officers/${id}`);\n  return response.data.data;\n};\n\n// Subjects API\nexport const getSubjects = async (): Promise<Subject[]> => {\n  const response: AxiosResponse<ListSubjectResponse> = await api.get('/subjects');\n  return response.data.data;\n};\n\n// Units API\nexport const getUnits = async (): Promise<Unit[]> => {\n  const response: AxiosResponse<ListUnitResponse> = await api.get('/units');\n  return response.data.data;\n};\n\n// Tests API\nexport const getOfficerSubjectTest = async (\n  officerId: string | number,\n  subjectId: string | number\n): Promise<Test> => {\n  const response: AxiosResponse<TestResponse> = await api.get('/tests/officer-subject', {\n    params: {\n      officerID: officerId,\n      subjectID: subjectId,\n    },\n  });\n  return response.data.data;\n};\n\nexport const startTest = async (\n  officerId: string | number,\n  testId: string | number\n): Promise<Test> => {\n  const response: AxiosResponse<TestResponse> = await api.post('/tests/start', null, {\n    params: {\n      officerID: officerId,\n      testID: testId,\n    },\n  });\n  return response.data.data;\n};\n\nexport const submitTest = async (\n  officerId: string | number,\n  testId: string | number,\n  answers: TestAnswers\n): Promise<Submission> => {\n  const response: AxiosResponse<SubmissionResponse> = await api.post('/tests/submit', answers, {\n    params: {\n      officerID: officerId,\n      testID: testId,\n    },\n  });\n  return response.data.data;\n};\n\nexport default api;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAyB,OAAO,CAgB5C,KAAM,CAAAC,YAAY,CAAG,SAAS,CAE9B,KAAM,CAAAC,GAAG,CAAGF,KAAK,CAACG,MAAM,CAAC,CACvBC,OAAO,CAAEH,YAAY,CACrBI,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF;AACA,MAAO,MAAM,CAAAC,WAAW,CAAG,KAAAA,CAAA,GAAgC,CACzD,KAAM,CAAAC,QAA4C,CAAG,KAAM,CAAAL,GAAG,CAACM,GAAG,CAAC,WAAW,CAAC,CAC/E,MAAO,CAAAD,QAAQ,CAACE,IAAI,CAACA,IAAI,CAC3B,CAAC,CAED,MAAO,MAAM,CAAAC,cAAc,CAAG,KAAO,CAAAC,EAAmB,EAAuB,CAC7E,KAAM,CAAAJ,QAAwC,CAAG,KAAM,CAAAL,GAAG,CAACM,GAAG,cAAAI,MAAA,CAAcD,EAAE,CAAE,CAAC,CACjF,MAAO,CAAAJ,QAAQ,CAACE,IAAI,CAACA,IAAI,CAC3B,CAAC,CAED;AACA,MAAO,MAAM,CAAAI,WAAW,CAAG,KAAAA,CAAA,GAAgC,CACzD,KAAM,CAAAN,QAA4C,CAAG,KAAM,CAAAL,GAAG,CAACM,GAAG,CAAC,WAAW,CAAC,CAC/E,MAAO,CAAAD,QAAQ,CAACE,IAAI,CAACA,IAAI,CAC3B,CAAC,CAED;AACA,MAAO,MAAM,CAAAK,QAAQ,CAAG,KAAAA,CAAA,GAA6B,CACnD,KAAM,CAAAP,QAAyC,CAAG,KAAM,CAAAL,GAAG,CAACM,GAAG,CAAC,QAAQ,CAAC,CACzE,MAAO,CAAAD,QAAQ,CAACE,IAAI,CAACA,IAAI,CAC3B,CAAC,CAED;AACA,MAAO,MAAM,CAAAM,qBAAqB,CAAG,KAAAA,CACnCC,SAA0B,CAC1BC,SAA0B,GACR,CAClB,KAAM,CAAAV,QAAqC,CAAG,KAAM,CAAAL,GAAG,CAACM,GAAG,CAAC,wBAAwB,CAAE,CACpFU,MAAM,CAAE,CACNC,SAAS,CAAEH,SAAS,CACpBI,SAAS,CAAEH,SACb,CACF,CAAC,CAAC,CACF,MAAO,CAAAV,QAAQ,CAACE,IAAI,CAACA,IAAI,CAC3B,CAAC,CAED,MAAO,MAAM,CAAAY,SAAS,CAAG,KAAAA,CACvBL,SAA0B,CAC1BM,MAAuB,GACL,CAClB,KAAM,CAAAf,QAAqC,CAAG,KAAM,CAAAL,GAAG,CAACqB,IAAI,CAAC,cAAc,CAAE,IAAI,CAAE,CACjFL,MAAM,CAAE,CACNC,SAAS,CAAEH,SAAS,CACpBQ,MAAM,CAAEF,MACV,CACF,CAAC,CAAC,CACF,MAAO,CAAAf,QAAQ,CAACE,IAAI,CAACA,IAAI,CAC3B,CAAC,CAED,MAAO,MAAM,CAAAgB,UAAU,CAAG,KAAAA,CACxBT,SAA0B,CAC1BM,MAAuB,CACvBI,OAAoB,GACI,CACxB,KAAM,CAAAnB,QAA2C,CAAG,KAAM,CAAAL,GAAG,CAACqB,IAAI,CAAC,eAAe,CAAEG,OAAO,CAAE,CAC3FR,MAAM,CAAE,CACNC,SAAS,CAAEH,SAAS,CACpBQ,MAAM,CAAEF,MACV,CACF,CAAC,CAAC,CACF,MAAO,CAAAf,QAAQ,CAACE,IAAI,CAACA,IAAI,CAC3B,CAAC,CAED,cAAe,CAAAP,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}